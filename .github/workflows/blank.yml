name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'  # Run every 5 hours

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: false
          persist-credentials: true
          token: ${{ secrets.FINE_GRAINED_PAT }}

      - name: Set up Firebuild
        uses: firebuild/firebuild-action@v4

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '22'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add Cloudflare repository
        run: |
          sudo mkdir -p --mode=0755 /usr/share/keyrings
          curl -fsSL https://pkg.cloudflare.com/cloudflare-main.gpg | sudo tee /usr/share/keyrings/cloudflare-main.gpg >/dev/null
          echo 'deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared jammy main' | sudo tee /etc/apt/sources.list.d/cloudflared.list
          sudo apt-get update

      - name: Cache apt packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: cloudflared
          version: 1.0

      - name: Debug - List directory contents
        run: ls -la
      
      - name: Run Spigot and cloudflared with Firebuild
        if: "!contains(github.event.head_commit.message, 'Auto commit every 30 seconds [no ci]')"
        continue-on-error: true
        env:
          FINE_GRAINED_PAT: ${{ secrets.FINE_GRAINED_PAT }}
          REPO: ${{ github.repository }}
          CF_TUNNEL_CERT: ${{secrets.CF_CERT}}
          CF_TUNNEL_UUID: ${{secrets.CF_TUNNEL_UUID_1}}
          CF_TUNNEL_UUID_CONTENT: ${{secrets.CF_TUNNEL_UUID_CONTENT}}
        run: |
          cd $GITHUB_WORKSPACE
          mkdir ~/.cloudflared
          echo "${CF_TUNNEL_CERT}" > ~/.cloudflared/cert.pem
          touch tunnel-config.yml
          echo "${CF_TUNNEL_UUID_CONTENT}" > credentials.json
          echo "url: tcp://localhost:25565" >> tunnel-config.yml
          echo "tunnel: ${CF_TUNNEL_UUID}" >> tunnel-config.yml
          echo "credentials-file: credentials.json" >> tunnel-config.yml

          start_spigot() {
            echo "Starting Spigot..."
            firebuild java -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:InitiatingHeapOccupancyPercent=15 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -Dusing.aikars.flags=https://mcflags.emc.gs -Daikars.new.flags=true -Xms16G -Xmx16G -jar spigot.jar nogui 2>&1 | sed '/login:/s/.*/<REDACTED>/' &
            SPIGOT_PID=$!
            echo "Spigot started with PID $SPIGOT_PID"
          }

          start_cloudflared() {
            firebuild cloudflared tunnel --config tunnel-config.yml run ${CF_TUNNEL_UUID} &
            CLOUDFLARED_PID=$!
            echo "Cloudflare Tunnel started with PID $CLOUDFLARED_PID"
          }

          # ... (rest of the script remains the same)

      - name: Rerun workflow if previous step failed
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.FINE_GRAINED_PAT }}
        run: |
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/CI.yml/dispatches" \
            -d '{"ref":"main"}'
          echo "Workflow rerun triggered due to previous step failure"
